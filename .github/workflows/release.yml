name: Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: '(Optional) Release Version e.g. 1.x.x'
        required: false
        type: string

permissions:
  contents: write
  
jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: go-version
        run: echo "::set-output name=version::$(cat ./.go-version)"
  
  changelog-gen:
    needs: [go-version]
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.commit.outputs.release-tag }}
      next-release-tag: ${{ steps.commit.outputs.next-release-tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.version }}
      - name: install changie
        run: go get github.com/miniscruff/changie
      - if: ${{ !github.event.inputs.release-version }}
        name: generate with changie
        run: changie batch $(changie latest) && changie merge
      - if: github.event.inputs.release-version
        name: generate with input
        run: changie batch ${{ github.event.inputs.release-version }} && changie merge
      - name: commit changelogs
        id: commit
        run: |
          release=$(changie latest)
          echo "::set-output name=release-tag::$(changie latest)"
          echo "::set-output name=next-release-tag::$(changie next minor)"

          git config --local user.email changelogbot@hashicorp.com
          git config --local user.name changelogbot
          git add CHANGELOG.md .changelog
          git commit -m "Update CHANGELOG.md before v$release release"
          git push
  release-notes:
    needs: [changelog-gen]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Generate Release Notes
        run: sed 1,2d .changelog/${{ needs.changelog-gen.outputs.release-tag }}.md > release-notes.txt
      - uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: release-notes.txt
          retention-days: 1
  release:
    needs: [go-version, changelog-gen, release-notes]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.version }}
      - name: Release Notes Download
        id: release-notes-download
        uses: actions/download-artifact@v2
        with:
          name: release-notes
          path: /tmp
      - name: goreleaser release
        uses: goreleaser/goreleaser-action@v2
        with:
          args: --rm-dist --release-notes=${{ steps.release-notes-download.outputs.download-path }}/release-notes.txt --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: v${{ needs.changelog-gen.outputs.release-tag }}
  prep-next-release:
    needs: [go-version, changelog-gen, release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.version }}
      - name: install changie
        run: go get github.com/miniscruff/changie
      - name: Update Changelog Header
        id: changelog
        run: |
          CHANGELOG_FILE_NAME="CHANGELOG.md"
          RELEASE_DATE=`date +%B' '%e', '%Y`
          TAG=${{ needs.changelog-gen.outputs.release-tag }}
          NEXT_TAG=${{ needs.changelog-gen.outputs.next-release-tag }}
          RELEASE_SPECIFIC_CHANGELOG_FILE_NAME=.changelog/${TAG}.md

          sed -i -e "1,2d; s/$TAG (Unreleased)/[$TAG](https:\/\/github.com\/anGie44\/${{ github.event.repository.name }}\/releases\/tag\/v$TAG) ($RELEASE_DATE)/" $CHANGELOG_FILE_NAME
          echo -e "## $NEXT_TAG (Unreleased)\n$(cat $CHANGELOG_FILE_NAME)" > $CHANGELOG_FILE_NAME
          
          sed -i -e "1 s/$TAG (Unreleased)/[$TAG](https:\/\/github.com\/anGie44\/${{ github.event.repository.name }}\/releases\/tag\/v$TAG) ($RELEASE_DATE)/" $RELEASE_SPECIFIC_CHANGELOG_FILE_NAME
        
          changie batch $NEXT_TAG
      - run: |
          git config --local user.email changelogbot@hashicorp.com
          git config --local user.name changelogbot
          git add CHANGELOG.md .changelog
          git commit -m "Update CHANGELOG.md after v${{ needs.changelog-gen.outputs.release-tag }}"
          git push
